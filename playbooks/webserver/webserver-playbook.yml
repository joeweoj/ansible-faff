---

- hosts: dev
  become: yes
  become_method: sudo

  vars:
      nginx_conf_src_path: nginx.conf.j2
      nginx_conf_dest_path: /etc/nginx/nginx.conf
      server_conf_src_path: server.conf.j2
      server_conf_dest_path: /etc/nginx/conf.d/server.conf

  tasks:

  # Setup Docker (specific to ubuntu xenial)
  - name: Uninstall Old Versions
    apt:
      pkg: "{{ item }}"
      state: absent
    with_items:
      - docker
      - docker-engine

  - name: Install dependencies
    apt:
      pkg: "{{ item }}"
      state: present
      update_cache: true
    with_items:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python-pip

  - name: Install the GPG key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg

  - name: Add Docker repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install certain python modules for docker
    pip:
      name: docker-py
      version: 1.10.6
      state: present

  - name: Install Docker
    apt:
      pkg: docker-ce=17.03.0~ce-0~ubuntu-xenial
      state: present
      update_cache: yes

  - name: Pull joewardell.com image
    docker_image:
      name: joewardell/joewardell.com
      tag: initial

  - name: Pull lingfieldunitedtrust.org image
    docker_image:
      name: joewardell/lingfieldunitedtrust.org
      tag: initial

  - name: Start joewardell.com container
    docker_container:
      name: joewardell.com
      image: joewardell/joewardell.com:initial
      state: started
      ports:
       - "4000:8080"

  - name: Start lingfieldunitedtrust.org container
    docker_container:
      name: lingfieldunitedtrust.org
      image: joewardell/lingfieldunitedtrust.org:initial
      state: started
      ports:
       - "5000:80"

  # Setup Nginx
  - name: Ensure nginx is at latest version
    apt: name=nginx state=latest

  - name: Copy nginx config
    template:
      src: "{{ nginx_conf_src_path }}"
      dest: "{{ nginx_conf_dest_path }}"
    notify:
      - restart nginx

  - name: Copy server config
    template:
      src: "{{ server_conf_src_path }}"
      dest: "{{ server_conf_dest_path }}"
    notify:
      - restart nginx

  - name: Ensure nginx is started (& enabled at boot)
    service: name=nginx state=started enabled=true

  handlers:
  - name: restart nginx
    service: name=nginx state=restarted
  - name: restart docker
    service: name=docker state=restarted